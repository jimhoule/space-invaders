# Creates library
add_library(
	${SPACE_INVADERS_ENGINE_TARGET_NAME}
	STATIC
	${CMAKE_CURRENT_SOURCE_DIR}/includes/EntryPoint.h
	${CMAKE_CURRENT_SOURCE_DIR}/src/EntryPoint.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/includes/framework/Actor.h
	${CMAKE_CURRENT_SOURCE_DIR}/src/framework/Actor.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/includes/framework/Application.h
	${CMAKE_CURRENT_SOURCE_DIR}/src/framework/Application.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/includes/framework/AssetsManager.h
	${CMAKE_CURRENT_SOURCE_DIR}/src/framework/AssetsManager.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/includes/framework/Core.h
	${CMAKE_CURRENT_SOURCE_DIR}/src/framework/Core.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/includes/framework/Object.h
	${CMAKE_CURRENT_SOURCE_DIR}/src/framework/Object.cpp
	${CMAKE_CURRENT_SOURCE_DIR}/includes/framework/World.h
	${CMAKE_CURRENT_SOURCE_DIR}/src/framework/World.cpp
)

# Links header files
target_include_directories(${SPACE_INVADERS_ENGINE_TARGET_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/includes)

# Links libraries
target_link_libraries(${SPACE_INVADERS_ENGINE_TARGET_NAME} PUBLIC sfml-graphics)
target_link_libraries(${SPACE_INVADERS_ENGINE_TARGET_NAME} PUBLIC sfml-window)
target_link_libraries(${SPACE_INVADERS_ENGINE_TARGET_NAME} PUBLIC sfml-system)
target_link_libraries(${SPACE_INVADERS_ENGINE_TARGET_NAME} PUBLIC sfml-audio)

# Creates a function to copy a library to a target
function(CopyLibToTarget LIB_NAME TARGET_NAME)
	add_custom_command(
		TARGET ${TARGET_NAME}
		POST_BUILD
		COMMAND 
		${CMAKE_COMMAND} -E copy_if_different
		$<TARGET_FILE:${LIB_NAME}>
		$<TARGET_FILE_DIR:${TARGET_NAME}>
	)
endfunction()

# Copies SFML libraries in executable directory
CopyLibToTarget(sfml-graphics ${SPACE_INVADERS_ENGINE_TARGET_NAME})
CopyLibToTarget(sfml-window ${SPACE_INVADERS_ENGINE_TARGET_NAME})
CopyLibToTarget(sfml-system ${SPACE_INVADERS_ENGINE_TARGET_NAME})
CopyLibToTarget(sfml-audio ${SPACE_INVADERS_ENGINE_TARGET_NAME})